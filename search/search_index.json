{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"borg/","text":"Borg Backup https://borgbackup.readthedocs.io/en/stable/ Installation sudo apt-get install borgbackup Setup Step 1 - Create the repository to house the archives borg init --encryption=keyfile /mnt/backup/borg Step 2 - Create archives (backups) as desired ARCHIVE_NAME='{hostname}-{now}' INCLUDES='/mnt/critical/Secure_bitwarden /mnt/critical/nextcloud/data/brandi/files /mnt/critical/nextcloud/data/cameron/files' borg create --compression zstd,10 --progress --list --verbose --stats /mnt/backup/borg::${ARCHIVE_NAME} ${INCLUDES} Step 3 - Backup Key root@www:/mnt/backup# borg key export usage: borg key export [-h] [--critical] [--error] [--warning] [--info] [--debug] [--debug-topic TOPIC] [-p] [--log-json] [--lock-wait SECONDS] [--bypass-lock] [--show-version] [--show-rc] [--umask M] [--remote-path PATH] [--remote-ratelimit RATE] [--consider-part-files] [--debug-profile FILE] [--rsh RSH] [--paper] [--qr-html] [REPOSITORY] [PATH] Recovery Process Steps 1. Install borgbackup on client 2. Download borg repository from offsite location 3. Re-create keyfile within recovery system 4. Mount Recovery drive at same path (/mnt/backup/borg) Re-create keyfile from Bitwarden The keyfile contains the decryption/MAC keys for the borg repository. The contents of the keyfile is encrypted with a passphrase. The keyfile needs to be re-created on the system performing the recovery operation so that it can decrypt the backup. Open /root/.config/borg/keys/mnt_backup_borg in an editor, create if not present. The directory may need to be created using the following command. mkdir -p /root/.config/borg/keys Once entered, save the contents of the file. Remount Borg Repository The Borg repository needs to be mounted at same location for borg mapping to work correctly. mkdir -p /mnt/backup mount -t ext4 /dev/sdb1 /mnt/backup View Contents The borg list command provides a listing of the archives present in the backup. root@thinkpad:borg list /mnt/backup/borg/ Enter passphrase for key /root/.config/borg/keys/mnt_backup_borg: vcenter-2022-12-01T21:07:04 Thu, 2022-12-01 21:07:04 [7b6e2497152015654c5b6aed44dbb81ed276b0218666969e74fc03fb2e81f0f4] vcenter-2022-12-04T22:03:00 Sun, 2022-12-04 22:03:01 [dd441e60a28c58aa5e30fc2dec2345f00389b47626a378c33d25c53be52dbb74] vcenter-2022-12-05T22:00:12 Mon, 2022-12-05 22:00:13 [8612f5b8a1f72176d492d1f7c78cd8db1a0b90bbb7eb41a796208e4f6a8dd432] vcenter-2022-12-06T22:03:20 Tue, 2022-12-06 22:03:21 [a991b553e0ac8584e71297b4f284702a30c89d583f814362fe9fcbd89d97e5d8] vcenter-2022-12-07T22:00:38 Wed, 2022-12-07 22:00:38 [49eddca0e4cd2b4c6c1f8096beb6a3f84e0220c6fdfc6a7a226eb1f3205d997d] vcenter-2022-12-09T22:02:57 Fri, 2022-12-09 22:02:58 [5e5304f3f50a864729376b11d97b64d1d05b7846aa802c5de7b05ddfa8d7357a] vcenter-2022-12-10T22:03:02 Sat, 2022-12-10 22:03:05 [8a37b7ed495dc42cc9cd7a6f867c3d03628a021c7b2807b34f877bbb0665bb7a] vcenter-2022-12-11T22:02:17 Sun, 2022-12-11 22:02:18 [1ac856f2ba227912ac54b50b83a70129538c04a63e3c3ef9b63fbfb6a715d943] vcenter-2022-12-12T22:00:16 Mon, 2022-12-12 22:00:17 [53a3cd34b5eaebe3716cd048b696125a077eba21ce239bf56be902d90f0b795b] Each archive can be mounted into file-system and navigated. mkdir -p /mnt/extract/borg borg mount /mnt/backup/borg::<name from first column>","title":"Borg"},{"location":"borg/#borg-backup","text":"https://borgbackup.readthedocs.io/en/stable/","title":"Borg Backup"},{"location":"borg/#installation","text":"sudo apt-get install borgbackup","title":"Installation"},{"location":"borg/#setup","text":"","title":"Setup"},{"location":"borg/#step-1-create-the-repository-to-house-the-archives","text":"borg init --encryption=keyfile /mnt/backup/borg","title":"Step 1 - Create the repository to house the archives"},{"location":"borg/#step-2-create-archives-backups-as-desired","text":"ARCHIVE_NAME='{hostname}-{now}' INCLUDES='/mnt/critical/Secure_bitwarden /mnt/critical/nextcloud/data/brandi/files /mnt/critical/nextcloud/data/cameron/files' borg create --compression zstd,10 --progress --list --verbose --stats /mnt/backup/borg::${ARCHIVE_NAME} ${INCLUDES}","title":"Step 2 - Create archives (backups) as desired"},{"location":"borg/#step-3-backup-key","text":"root@www:/mnt/backup# borg key export usage: borg key export [-h] [--critical] [--error] [--warning] [--info] [--debug] [--debug-topic TOPIC] [-p] [--log-json] [--lock-wait SECONDS] [--bypass-lock] [--show-version] [--show-rc] [--umask M] [--remote-path PATH] [--remote-ratelimit RATE] [--consider-part-files] [--debug-profile FILE] [--rsh RSH] [--paper] [--qr-html] [REPOSITORY] [PATH]","title":"Step 3 - Backup Key"},{"location":"borg/#recovery-process","text":"Steps 1. Install borgbackup on client 2. Download borg repository from offsite location 3. Re-create keyfile within recovery system 4. Mount Recovery drive at same path (/mnt/backup/borg)","title":"Recovery Process"},{"location":"borg/#re-create-keyfile-from-bitwarden","text":"The keyfile contains the decryption/MAC keys for the borg repository. The contents of the keyfile is encrypted with a passphrase. The keyfile needs to be re-created on the system performing the recovery operation so that it can decrypt the backup. Open /root/.config/borg/keys/mnt_backup_borg in an editor, create if not present. The directory may need to be created using the following command. mkdir -p /root/.config/borg/keys Once entered, save the contents of the file.","title":"Re-create keyfile from Bitwarden"},{"location":"borg/#remount-borg-repository","text":"The Borg repository needs to be mounted at same location for borg mapping to work correctly. mkdir -p /mnt/backup mount -t ext4 /dev/sdb1 /mnt/backup View Contents The borg list command provides a listing of the archives present in the backup. root@thinkpad:borg list /mnt/backup/borg/ Enter passphrase for key /root/.config/borg/keys/mnt_backup_borg: vcenter-2022-12-01T21:07:04 Thu, 2022-12-01 21:07:04 [7b6e2497152015654c5b6aed44dbb81ed276b0218666969e74fc03fb2e81f0f4] vcenter-2022-12-04T22:03:00 Sun, 2022-12-04 22:03:01 [dd441e60a28c58aa5e30fc2dec2345f00389b47626a378c33d25c53be52dbb74] vcenter-2022-12-05T22:00:12 Mon, 2022-12-05 22:00:13 [8612f5b8a1f72176d492d1f7c78cd8db1a0b90bbb7eb41a796208e4f6a8dd432] vcenter-2022-12-06T22:03:20 Tue, 2022-12-06 22:03:21 [a991b553e0ac8584e71297b4f284702a30c89d583f814362fe9fcbd89d97e5d8] vcenter-2022-12-07T22:00:38 Wed, 2022-12-07 22:00:38 [49eddca0e4cd2b4c6c1f8096beb6a3f84e0220c6fdfc6a7a226eb1f3205d997d] vcenter-2022-12-09T22:02:57 Fri, 2022-12-09 22:02:58 [5e5304f3f50a864729376b11d97b64d1d05b7846aa802c5de7b05ddfa8d7357a] vcenter-2022-12-10T22:03:02 Sat, 2022-12-10 22:03:05 [8a37b7ed495dc42cc9cd7a6f867c3d03628a021c7b2807b34f877bbb0665bb7a] vcenter-2022-12-11T22:02:17 Sun, 2022-12-11 22:02:18 [1ac856f2ba227912ac54b50b83a70129538c04a63e3c3ef9b63fbfb6a715d943] vcenter-2022-12-12T22:00:16 Mon, 2022-12-12 22:00:17 [53a3cd34b5eaebe3716cd048b696125a077eba21ce239bf56be902d90f0b795b] Each archive can be mounted into file-system and navigated. mkdir -p /mnt/extract/borg borg mount /mnt/backup/borg::<name from first column>","title":"Remount Borg Repository"},{"location":"rclone/","text":"rclone rclone is a utility that supports a wide variety of storage services for the movements of data. rclone is design to work in a similar fashion to rsync and support many similar options. The rclone help menu can be opened with the --help option. Additional information on rclone can be found at https://rclone.org/. root@www:/mnt/critical/Secure_maintenance/network-services# rclone --help Rclone syncs files to and from cloud storage providers as well as mounting them, listing them in lots of different ways. See the home page (https://rclone.org/) for installation, usage, documentation, changelog and configuration walkthroughs. Usage: rclone [flags] rclone [command] Available Commands: about Get quota information from the remote. authorize Remote authorization. backend Run a backend-specific command. bisync Perform bidirectional synchronization between two paths. cat Concatenates any files and sends them to stdout. check Checks the files in the source and destination match. checksum Checks the files in the source against a SUM file. cleanup Clean up the remote if possible. completion Generate the autocompletion script for the specified shell config Enter an interactive configuration session. copy Copy files from source to dest, skipping identical files. copyto Copy files from source to dest, skipping identical files. copyurl Copy url content to dest. cryptcheck Cryptcheck checks the integrity of a crypted remote. cryptdecode Cryptdecode returns unencrypted file names. dedupe Interactively find duplicate filenames and delete/rename them. delete Remove the files in path. deletefile Remove a single file from remote. genautocomplete Output completion script for a given shell. gendocs Output markdown docs for rclone to the directory supplied. hashsum Produces a hashsum file for all the objects in the path. help Show help for rclone commands, flags and backends. link Generate public link to file/folder. listremotes List all the remotes in the config file. ls List the objects in the path with size and path. lsd List all directories/containers/buckets in the path. lsf List directories and objects in remote:path formatted for parsing. lsjson List directories and objects in the path in JSON format. lsl List the objects in path with modification time, size and path. md5sum Produces an md5sum file for all the objects in the path. mkdir Make the path if it doesnt already exist. mount Mount the remote as file system on a mountpoint. move Move files from source to dest. moveto Move file or directory from source to dest. ncdu Explore a remote with a text based user interface. obscure Obscure password for use in the rclone config file. purge Remove the path and all of its contents. rc Run a command against a running rclone. rcat Copies standard input to file on remote. rcd Run rclone listening to remote control commands only. rmdir Remove the empty directory at path. rmdirs Remove empty directories under the path. selfupdate Update the rclone binary. serve Serve a remote over a protocol. settier Changes storage class/tier of objects in remote. sha1sum Produces an sha1sum file for all the objects in the path. size Prints the total size and number of objects in remote:path. sync Make source and dest identical, modifying destination only. test Run a test command touch Create new file or change file modification time. tree List the contents of the remote in a tree like fashion. version Show the version number. Use \"rclone [command] --help\" for more information about a command. Use \"rclone help flags\" for to see the global flags. Use \"rclone help backends\" for a list of supported services. Remote Management Within rclone, data can be pushed or pulled from remotes that have been configured within the system. For instance, pushing data into an S3 bucket would require that a dedicated remote be created that points to Amazon AWS S3. List Remotes The currently configured remotes within the system can be seen with the rclone listremotes command. root@www:/mnt/critical/Secure_maintenance/network-services# rclone listremotes iDriveE2NextcloudProd: iDriveE2VaultwardenProd: It's possible to determine where the file storing the configuration is located with the following command. root@www:/mnt/critical/Secure_maintenance/network-services# rclone config file Configuration file is stored at: /root/.config/rclone/rclone.conf Creation Adding remotes allows for data to be pulled or pushed to additional locations. rclone config The above command will open an interactive menu for managing the remotes within the system. For this section, the 'n' option should be selected to add new targets. root@www:/mnt/critical/Secure_maintenance/network-services# rclone config Current remotes: Name Type ==== ==== iDriveE2NextcloudProd s3 iDriveE2VaultwardenProd s3 e) Edit existing remote n) New remote d) Delete remote r) Rename remote c) Copy remote s) Set configuration password q) Quit config Backup Rclone can be utilized to push and pull data to the remotes that are configured. The pushing of data into the remote can be utilized in a backup process. For instance, the results of a duplicity could be pushed into a remote S3 bucket to support offsite backup operations. The following is an example of pushing data from a duplicity backup to an iDrive E2 bucket. The appropriate fields will need to be updated as required. rclone copy --progress <source> <remote>:/<bucket name> The credential programmed into the E2 remote must be provided with write access to the desired remote. The previous command will pull the files from the source directory and upload them into the provided bucket. The following is an example related to the backup of Vaultwarden to an E2 bucket called vaultwarden-duplicity-prod. The --progress flag tell rclone to provide performance metrics as the upload process is in progress. rclone copy --progress /mnt/backup/duplicity/vaultwarden iDriveE2VaultwardenProd:/vaultwarden-duplicity-prod As with all backups, it's important to be able to acquire the files in the event a recovery becomes necessary. This is easily done with rclone. The credentials programmed into the remote will need to have read access to the E2 bucket. The following is the pattern for performing a restoration. rclone copy --progress <remote>:/<bucket name>/<folder> <destination> In the previous example, the remote is the first argument in the copy operation. This tells rclone that the data should be downloaded from the remote and stored wtihin the target destination. rclone copy --progress iDriveE2VaultwardenProd:/vaultwarden-duplicity-prod/2022 /mnt/restore/vaultwarden/2022","title":"RClone"},{"location":"rclone/#rclone","text":"rclone is a utility that supports a wide variety of storage services for the movements of data. rclone is design to work in a similar fashion to rsync and support many similar options. The rclone help menu can be opened with the --help option. Additional information on rclone can be found at https://rclone.org/. root@www:/mnt/critical/Secure_maintenance/network-services# rclone --help Rclone syncs files to and from cloud storage providers as well as mounting them, listing them in lots of different ways. See the home page (https://rclone.org/) for installation, usage, documentation, changelog and configuration walkthroughs. Usage: rclone [flags] rclone [command] Available Commands: about Get quota information from the remote. authorize Remote authorization. backend Run a backend-specific command. bisync Perform bidirectional synchronization between two paths. cat Concatenates any files and sends them to stdout. check Checks the files in the source and destination match. checksum Checks the files in the source against a SUM file. cleanup Clean up the remote if possible. completion Generate the autocompletion script for the specified shell config Enter an interactive configuration session. copy Copy files from source to dest, skipping identical files. copyto Copy files from source to dest, skipping identical files. copyurl Copy url content to dest. cryptcheck Cryptcheck checks the integrity of a crypted remote. cryptdecode Cryptdecode returns unencrypted file names. dedupe Interactively find duplicate filenames and delete/rename them. delete Remove the files in path. deletefile Remove a single file from remote. genautocomplete Output completion script for a given shell. gendocs Output markdown docs for rclone to the directory supplied. hashsum Produces a hashsum file for all the objects in the path. help Show help for rclone commands, flags and backends. link Generate public link to file/folder. listremotes List all the remotes in the config file. ls List the objects in the path with size and path. lsd List all directories/containers/buckets in the path. lsf List directories and objects in remote:path formatted for parsing. lsjson List directories and objects in the path in JSON format. lsl List the objects in path with modification time, size and path. md5sum Produces an md5sum file for all the objects in the path. mkdir Make the path if it doesnt already exist. mount Mount the remote as file system on a mountpoint. move Move files from source to dest. moveto Move file or directory from source to dest. ncdu Explore a remote with a text based user interface. obscure Obscure password for use in the rclone config file. purge Remove the path and all of its contents. rc Run a command against a running rclone. rcat Copies standard input to file on remote. rcd Run rclone listening to remote control commands only. rmdir Remove the empty directory at path. rmdirs Remove empty directories under the path. selfupdate Update the rclone binary. serve Serve a remote over a protocol. settier Changes storage class/tier of objects in remote. sha1sum Produces an sha1sum file for all the objects in the path. size Prints the total size and number of objects in remote:path. sync Make source and dest identical, modifying destination only. test Run a test command touch Create new file or change file modification time. tree List the contents of the remote in a tree like fashion. version Show the version number. Use \"rclone [command] --help\" for more information about a command. Use \"rclone help flags\" for to see the global flags. Use \"rclone help backends\" for a list of supported services.","title":"rclone"},{"location":"rclone/#remote-management","text":"Within rclone, data can be pushed or pulled from remotes that have been configured within the system. For instance, pushing data into an S3 bucket would require that a dedicated remote be created that points to Amazon AWS S3.","title":"Remote Management"},{"location":"rclone/#list-remotes","text":"The currently configured remotes within the system can be seen with the rclone listremotes command. root@www:/mnt/critical/Secure_maintenance/network-services# rclone listremotes iDriveE2NextcloudProd: iDriveE2VaultwardenProd: It's possible to determine where the file storing the configuration is located with the following command. root@www:/mnt/critical/Secure_maintenance/network-services# rclone config file Configuration file is stored at: /root/.config/rclone/rclone.conf","title":"List Remotes"},{"location":"rclone/#creation","text":"Adding remotes allows for data to be pulled or pushed to additional locations. rclone config The above command will open an interactive menu for managing the remotes within the system. For this section, the 'n' option should be selected to add new targets. root@www:/mnt/critical/Secure_maintenance/network-services# rclone config Current remotes: Name Type ==== ==== iDriveE2NextcloudProd s3 iDriveE2VaultwardenProd s3 e) Edit existing remote n) New remote d) Delete remote r) Rename remote c) Copy remote s) Set configuration password q) Quit config","title":"Creation"},{"location":"rclone/#backup","text":"Rclone can be utilized to push and pull data to the remotes that are configured. The pushing of data into the remote can be utilized in a backup process. For instance, the results of a duplicity could be pushed into a remote S3 bucket to support offsite backup operations. The following is an example of pushing data from a duplicity backup to an iDrive E2 bucket. The appropriate fields will need to be updated as required. rclone copy --progress <source> <remote>:/<bucket name> The credential programmed into the E2 remote must be provided with write access to the desired remote. The previous command will pull the files from the source directory and upload them into the provided bucket. The following is an example related to the backup of Vaultwarden to an E2 bucket called vaultwarden-duplicity-prod. The --progress flag tell rclone to provide performance metrics as the upload process is in progress. rclone copy --progress /mnt/backup/duplicity/vaultwarden iDriveE2VaultwardenProd:/vaultwarden-duplicity-prod As with all backups, it's important to be able to acquire the files in the event a recovery becomes necessary. This is easily done with rclone. The credentials programmed into the remote will need to have read access to the E2 bucket. The following is the pattern for performing a restoration. rclone copy --progress <remote>:/<bucket name>/<folder> <destination> In the previous example, the remote is the first argument in the copy operation. This tells rclone that the data should be downloaded from the remote and stored wtihin the target destination. rclone copy --progress iDriveE2VaultwardenProd:/vaultwarden-duplicity-prod/2022 /mnt/restore/vaultwarden/2022","title":"Backup"}]}